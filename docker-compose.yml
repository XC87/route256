version: "3.1"
services:
  cart:
    image: cart
    build: ./cart/
    ports:
      - "8082:8080"
    stop_signal: SIGINT
    stop_grace_period: 30s
  loms:
    image: loms
    build: ./loms/
    ports:
      - "50062:50051"
      - "8091:8081"
      - "8095:8085"
    environment:
      LOMS_GRPC_HOST: loms:50051
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
      POSTGRES_DB_HOST: loms-db
      POSTGRES_DB_SLAVE_HOST: loms-db-slave
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_REPLICATION_USER: ${POSTGRESQL_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRESQL_REPLICATION_PASSWORD}
    depends_on:
      loms-db:
        condition: service_healthy
    stop_signal: SIGINT
    stop_grace_period: 30s
  notifier:
    image: notifier
    build: ./notifier/
    depends_on: [ loms, kafka0 ]
    deploy:
      replicas: 3
    environment:
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
      KAFKA_CONSUMER_NAME: ${KAFKA_CONSUMER_NAME}
    stop_signal: SIGINT
    stop_grace_period: 30s
  loms-db:
    extends:
      file: docker/loms-db.yml
      service: loms-db
  loms-db-slave:
    extends:
      file: docker/loms-db.yml
      service: loms-db-slave
  kafka-ui:
    extends:
      file: docker/kafka.yml
      service: kafka-ui
  kafka0:
    extends:
      file: docker/kafka.yml
      service: kafka0
  kafka-init-topics:
    extends:
      file: docker/kafka.yml
      service: kafka-init-topics
volumes:
  pglomsdata:
    driver: local
