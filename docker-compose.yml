version: "3.8"
services:
  cart:
    image: cart
    build:
      context: ./
      dockerfile: ./cart/Dockerfile
    ports:
      - "8080:8080"
    environment:
      LOMS_GRPC_HOST: loms:50051
      TRACER_URL: ${TRACER_URL}
    stop_signal: SIGINT
    stop_grace_period: 30s
  loms:
    image: loms
    build:
      context: ./
      dockerfile: ./loms/Dockerfile
    ports:
      - "50062:50051"
      - "8081:8081"
      - "8095:8085"
    environment:
      LOMS_GRPC_HOST: loms:50051
      TRACER_URL: ${TRACER_URL}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
      POSTGRES_DB_HOST: loms-db
      POSTGRES_DB_SLAVE_HOST: loms-db-slave
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_REPLICATION_USER: ${POSTGRESQL_REPLICATION_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${POSTGRESQL_REPLICATION_PASSWORD}
    depends_on:
      loms-db:
        condition: service_healthy
      kafka0:
        condition: service_healthy
      kafka-init-topics:
        condition: service_completed_successfully

    stop_signal: SIGINT
    stop_grace_period: 30s
  notifier:
    image: notifier
    build:
      context: ./
      dockerfile: ./notifier/Dockerfile
    depends_on: [ loms, kafka0 ]
    deploy:
      replicas: 3
    environment:
      TRACER_URL: ${TRACER_URL}
      KAFKA_BROKERS: ${KAFKA_BROKERS}
      KAFKA_TOPIC_NAME: ${KAFKA_TOPIC_NAME}
      KAFKA_CONSUMER_NAME: ${KAFKA_CONSUMER_NAME}
    stop_signal: SIGINT
    stop_grace_period: 30s
  loms-db:
    extends:
      file: docker/loms-db.yml
      service: loms-db
  loms-db-slave:
    extends:
      file: docker/loms-db.yml
      service: loms-db-slave
  loms-db-shard1:
    extends:
      file: docker/loms-db.yml
      service: loms-db-shard1
  loms-db-slave-shard1:
    extends:
      file: docker/loms-db.yml
      service: loms-db-slave-shard1
  kafka-ui:
    extends:
      file: docker/kafka.yml
      service: kafka-ui
  kafka0:
    extends:
      file: docker/kafka.yml
      service: kafka0
  kafka-init-topics:
    extends:
      file: docker/kafka.yml
      service: kafka-init-topics
  prometheus:
    container_name: prometheus
    extends:
      file: docker/log-trace-metric.yml
      service: prometheus
  jaeger:
    extends:
      file: docker/log-trace-metric.yml
      service: jaeger
  grafana:
    extends:
      file: docker/log-trace-metric.yml
      service: grafana
  redis:
    extends:
      file: docker/redis.yml
      service: redis
volumes:
  pglomsdata:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redisdata:
    driver: local